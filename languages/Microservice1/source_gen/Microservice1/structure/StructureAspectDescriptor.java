package Microservice1.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptExecution = createDescriptorForExecution();
  /*package*/ final ConceptDescriptor myConceptInputPort = createDescriptorForInputPort();
  /*package*/ final ConceptDescriptor myConceptInterface = createDescriptorForInterface();
  /*package*/ final ConceptDescriptor myConceptNode = createDescriptorForNode();
  /*package*/ final ConceptDescriptor myConceptOperation = createDescriptorForOperation();
  /*package*/ final ConceptDescriptor myConceptOutputPort = createDescriptorForOutputPort();
  /*package*/ final ConceptDescriptor myConceptPort = createDescriptorForPort();
  /*package*/ final ConceptDescriptor myConceptRequestMessageType = createDescriptorForRequestMessageType();
  /*package*/ final ConceptDescriptor myConceptRequestResponse = createDescriptorForRequestResponse();
  /*package*/ final ConceptDescriptor myConceptResponseMessageType = createDescriptorForResponseMessageType();
  /*package*/ final ConceptDescriptor myConceptmicroservice = createDescriptorFormicroservice();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptExecution, myConceptInputPort, myConceptInterface, myConceptNode, myConceptOperation, myConceptOutputPort, myConceptPort, myConceptRequestMessageType, myConceptRequestResponse, myConceptResponseMessageType, myConceptmicroservice);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Execution:
        return myConceptExecution;
      case LanguageConceptSwitch.InputPort:
        return myConceptInputPort;
      case LanguageConceptSwitch.Interface:
        return myConceptInterface;
      case LanguageConceptSwitch.Node:
        return myConceptNode;
      case LanguageConceptSwitch.Operation:
        return myConceptOperation;
      case LanguageConceptSwitch.OutputPort:
        return myConceptOutputPort;
      case LanguageConceptSwitch.Port:
        return myConceptPort;
      case LanguageConceptSwitch.RequestMessageType:
        return myConceptRequestMessageType;
      case LanguageConceptSwitch.RequestResponse:
        return myConceptRequestResponse;
      case LanguageConceptSwitch.ResponseMessageType:
        return myConceptResponseMessageType;
      case LanguageConceptSwitch.microservice:
        return myConceptmicroservice;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForExecution() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "Execution", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x17f752bd37f0c70cL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/1726939954760697612");
    b.version(2);
    b.alias("execution");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputPort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "InputPort", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd26331619ebL);
    b.class_(false, false, false);
    b.super_("Microservice1.structure.Port", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd26331612b8L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/8728465524584225259");
    b.version(2);
    b.alias("inputPort");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInterface() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "Interface", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd2633149458L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/8728465524584125528");
    b.version(2);
    b.aggregate("operations", 0x7921bd263314c17cL).target(0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd2633149e27L).optional(false).ordered(true).multiple(true).origin("8728465524584137084").done();
    b.alias("interface");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "Node", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd263315e3aaL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/8728465524584211370");
    b.version(2);
    b.alias("node");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "Operation", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd2633149e27L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/8728465524584128039");
    b.version(2);
    b.alias("operation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputPort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "OutputPort", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd263316276cL);
    b.class_(false, false, false);
    b.super_("Microservice1.structure.Port", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd26331612b8L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/8728465524584228716");
    b.version(2);
    b.alias("outputPort");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "Port", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd26331612b8L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/8728465524584223416");
    b.version(2);
    b.property("Protocol", 0x7921bd2633162941L).type(PrimitiveTypeId.STRING).origin("8728465524584229185").done();
    b.property("Interfaces", 0x7921bd263316298fL).type(PrimitiveTypeId.STRING).origin("8728465524584229263").done();
    b.alias("port");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRequestMessageType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "RequestMessageType", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd26331575adL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/8728465524584183213");
    b.version(2);
    b.aggregate("nodes", 0x7921bd263315dd8aL).target(0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd263315e3aaL).optional(false).ordered(true).multiple(true).origin("8728465524584209802").done();
    b.alias("requestMessageType");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRequestResponse() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "RequestResponse", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd263314aabbL);
    b.class_(false, false, false);
    b.super_("Microservice1.structure.Operation", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd2633149e27L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/8728465524584131259");
    b.version(2);
    b.aggregate("requestMessage", 0x7921bd26331572f0L).target(0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd26331575adL).optional(false).ordered(true).multiple(false).origin("8728465524584182512").done();
    b.aggregate("responseMessage", 0x7921bd2633159aa3L).target(0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd2633158633L).optional(false).ordered(true).multiple(false).origin("8728465524584192675").done();
    b.alias("requestResponse");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResponseMessageType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "ResponseMessageType", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd2633158633L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/8728465524584187443");
    b.version(2);
    b.aggregate("nodes", 0x7921bd263315eb55L).target(0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd263315e3aaL).optional(false).ordered(true).multiple(true).origin("8728465524584213333").done();
    b.alias("responseMessageType");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFormicroservice() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice1", "microservice", 0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x17f752bd37f0a959L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b938d937-6129-440b-b954-75f90e8308be(Microservice1.structure)/1726939954760690009");
    b.version(2);
    b.aggregate("inputPort", 0x17f752bd37f0b353L).target(0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd26331619ebL).optional(true).ordered(true).multiple(false).origin("1726939954760692563").done();
    b.aggregate("outputPort", 0x17f752bd37f0b851L).target(0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd263316276cL).optional(true).ordered(true).multiple(false).origin("1726939954760693841").done();
    b.aggregate("interface", 0x17f752bd37f0bde7L).target(0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x7921bd2633149458L).optional(true).ordered(true).multiple(false).origin("1726939954760695271").done();
    b.aggregate("execution", 0x17f752bd37f0c1bdL).target(0x5c89a8404b0c458cL, 0x8389f58f5a50822bL, 0x17f752bd37f0c70cL).optional(true).ordered(true).multiple(false).origin("1726939954760696253").done();
    b.alias("microservice");
    return b.create();
  }
}
