package Microservice.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptInputPort = createDescriptorForInputPort();
  /*package*/ final ConceptDescriptor myConceptInterface = createDescriptorForInterface();
  /*package*/ final ConceptDescriptor myConceptOutputPort = createDescriptorForOutputPort();
  /*package*/ final ConceptDescriptor myConceptParameter = createDescriptorForParameter();
  /*package*/ final ConceptDescriptor myConceptRequestResponseMessage = createDescriptorForRequestResponseMessage();
  /*package*/ final ConceptDescriptor myConceptRequestType = createDescriptorForRequestType();
  /*package*/ final ConceptDescriptor myConceptResponseType = createDescriptorForResponseType();
  /*package*/ final ConceptDescriptor myConceptThrowMessage = createDescriptorForThrowMessage();
  /*package*/ final ConceptDescriptor myConceptmicroservice = createDescriptorFormicroservice();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptInputPort, myConceptInterface, myConceptOutputPort, myConceptParameter, myConceptRequestResponseMessage, myConceptRequestType, myConceptResponseType, myConceptThrowMessage, myConceptmicroservice);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.InputPort:
        return myConceptInputPort;
      case LanguageConceptSwitch.Interface:
        return myConceptInterface;
      case LanguageConceptSwitch.OutputPort:
        return myConceptOutputPort;
      case LanguageConceptSwitch.Parameter:
        return myConceptParameter;
      case LanguageConceptSwitch.RequestResponseMessage:
        return myConceptRequestResponseMessage;
      case LanguageConceptSwitch.RequestType:
        return myConceptRequestType;
      case LanguageConceptSwitch.ResponseType:
        return myConceptResponseType;
      case LanguageConceptSwitch.ThrowMessage:
        return myConceptThrowMessage;
      case LanguageConceptSwitch.microservice:
        return myConceptmicroservice;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForInputPort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice", "InputPort", 0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f23a1cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:28e204df-9d7a-42ae-8326-c233e8a2a717(Microservice.structure)/1726939954760792604");
    b.version(2);
    b.property("Location", 0x16a9394b322bace4L).type(PrimitiveTypeId.STRING).origin("1632899335025568996").done();
    b.property("Protocol", 0x16a9394b322baea9L).type(PrimitiveTypeId.STRING).origin("1632899335025569449").done();
    b.associate("Interfaces", 0x16a9394b322bba66L).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f29f35L).optional(true).origin("1632899335025572454").done();
    b.alias("inputPort");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInterface() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice", "Interface", 0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f29f35L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:28e204df-9d7a-42ae-8326-c233e8a2a717(Microservice.structure)/1726939954760818485");
    b.version(2);
    b.associate("throwMessage", 0x17f752bd37f89e3dL).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f78bdaL).optional(true).origin("1726939954761211453").done();
    b.associate("requestResponseMessage", 0x17f752bd37fab923L).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f5c9ebL).optional(true).origin("1726939954761349411").done();
    b.alias("interface");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputPort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice", "OutputPort", 0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f24380L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:28e204df-9d7a-42ae-8326-c233e8a2a717(Microservice.structure)/1726939954760795008");
    b.version(2);
    b.property("Protocol", 0x16a9394b322bc7e3L).type(PrimitiveTypeId.STRING).origin("1632899335025575907").done();
    b.associate("Interfaces", 0x16a9394b322bd0b5L).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f29f35L).optional(true).origin("1632899335025578165").done();
    b.alias("outputPort");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice", "Parameter", 0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f4a5f1L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:28e204df-9d7a-42ae-8326-c233e8a2a717(Microservice.structure)/1726939954760951281");
    b.version(2);
    b.property("type", 0x17f752bd37f4ad00L).type(PrimitiveTypeId.STRING).origin("1726939954760953088").done();
    b.alias("parameter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRequestResponseMessage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice", "RequestResponseMessage", 0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f5c9ebL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:28e204df-9d7a-42ae-8326-c233e8a2a717(Microservice.structure)/1726939954761026027");
    b.version(2);
    b.aggregate("requestType", 0x17f752bd37f5d7ffL).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f5e0ccL).optional(false).ordered(true).multiple(false).origin("1726939954761029631").done();
    b.aggregate("responseType", 0x17f752bd37f5ed1eL).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f5f13dL).optional(false).ordered(true).multiple(false).origin("1726939954761035038").done();
    b.alias("requestResponseMessage");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRequestType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice", "RequestType", 0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f5e0ccL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:28e204df-9d7a-42ae-8326-c233e8a2a717(Microservice.structure)/1726939954761031884");
    b.version(2);
    b.property("type", 0x16a9394b3216659fL).type(PrimitiveTypeId.STRING).origin("1632899335024174495").done();
    b.aggregate("parameters", 0x17f752bd37f9bae9L).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f4a5f1L).optional(false).ordered(true).multiple(true).origin("1726939954761284329").done();
    b.alias("requestType");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResponseType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice", "ResponseType", 0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f5f13dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:28e204df-9d7a-42ae-8326-c233e8a2a717(Microservice.structure)/1726939954761036093");
    b.version(2);
    b.alias("responseType");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThrowMessage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice", "ThrowMessage", 0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f78bdaL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:28e204df-9d7a-42ae-8326-c233e8a2a717(Microservice.structure)/1726939954761141210");
    b.version(2);
    b.alias("throwMessage");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFormicroservice() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Microservice", "microservice", 0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f231e4L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:28e204df-9d7a-42ae-8326-c233e8a2a717(Microservice.structure)/1726939954760790500");
    b.version(2);
    b.property("directive", 0x17f752bd37f49324L).type(PrimitiveTypeId.STRING).origin("1726939954760946468").done();
    b.associate("include", 0x16a9394b31f87f15L).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f29f35L).optional(false).origin("1632899335022214933").done();
    b.aggregate("interface", 0x16a9394b32141be4L).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f29f35L).optional(false).ordered(true).multiple(false).origin("1632899335024024548").done();
    b.aggregate("inputPort", 0x16a9394b31df9c66L).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f23a1cL).optional(false).ordered(true).multiple(false).origin("1632899335020584038").done();
    b.aggregate("outputPort", 0x16a9394b31df9ff1L).target(0x77de623ba0547edL, 0xa860a4445e8de4c1L, 0x17f752bd37f24380L).optional(false).ordered(true).multiple(false).origin("1632899335020584945").done();
    b.aggregate("behavior", 0x16a9394b323c624cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1632899335026664012").done();
    b.alias("microservice");
    return b.create();
  }
}
